// <auto-generated />
using System;
using GenealogicalTree.DAL.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GenealogicalTree.DAL.Migrations
{
    [DbContext(typeof(TreeDbContext))]
    partial class TreeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("GenealogicalTree.Shared.Entity.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PartnerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PartnerId")
                        .IsUnique();

                    b.ToTable("People");
                });

            modelBuilder.Entity("PersonPerson", b =>
                {
                    b.Property<int>("ChildrenId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ParentsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ChildrenId", "ParentsId");

                    b.HasIndex("ParentsId");

                    b.ToTable("PersonPerson");
                });

            modelBuilder.Entity("GenealogicalTree.Shared.Entity.Person", b =>
                {
                    b.HasOne("GenealogicalTree.Shared.Entity.Person", "Partner")
                        .WithOne()
                        .HasForeignKey("GenealogicalTree.Shared.Entity.Person", "PartnerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("PersonPerson", b =>
                {
                    b.HasOne("GenealogicalTree.Shared.Entity.Person", null)
                        .WithMany()
                        .HasForeignKey("ChildrenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GenealogicalTree.Shared.Entity.Person", null)
                        .WithMany()
                        .HasForeignKey("ParentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
